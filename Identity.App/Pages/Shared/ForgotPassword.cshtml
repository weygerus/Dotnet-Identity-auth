@model ForgotPasswordViewModel
@{
    ViewData["Title"] = "ForgotPassword";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

@{
    var hasEmailSend = ViewData["HasEmailSent"];
    var validationCode = ViewData["ValidationCode"];

    if (!Convert.ToBoolean(hasEmailSend))
    {
        <form asp-route-returnUrl="@ViewData["ReturnUrl"]" method="post">
            <h4>Forgot Password?</h4>

            <div class="form-group">
                <label asp-for="Email"></label>
                <input asp-for="Email" class="form-control">
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <label class="small" for="">
                <button class="btn btn-primary" type="submit">Enviar</button>
            </label>
        </form>
    }
    else
    {
        <h4>Forgot Password?</h4>

        <span class="text-success">@ViewData["Message"]</span>

        <div class="form-group">
            <input asp-for="ValidateCodeTyped" type="number" class="number_input form-control" >
            <span asp-validation-for="ValidateCodeTyped" class="text-danger"></span>
            <button class="button_validation_code">Enviar</button>
            @ViewData["ValidateCodeTyped"] = Model.ValidateCodeTyped;
        </div>

        <style>
            .number_input{
                margin-top: 15px;
                margin-bottom: 10px;
                width: 150px;
                height: 40px;
                font-size: 25px;
                text-align: center;
            }

            .number_input:focus {
                border-style: none;
            }

            input[type=number]::-webkit-inner-spin-button { 
                -webkit-appearance: none;
            }

            input[type=number] { 
                -moz-appearance: textfield;
                appearance: textfield;
            }
        </style>
    }
}